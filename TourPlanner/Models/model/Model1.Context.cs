//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TourPlanner.Models.model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TourPlannerEntities1 : DbContext
    {
        public TourPlannerEntities1()
            : base("name=TourPlannerEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblNavbar> tblNavbars { get; set; }
        public virtual DbSet<tblPackage> tblPackages { get; set; }
    
        public virtual ObjectResult<dbNavSelect_Result> dbNavSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dbNavSelect_Result>("dbNavSelect");
        }
    
        public virtual ObjectResult<SelectPackage_Result> SelectPackage()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectPackage_Result>("SelectPackage");
        }
    
        public virtual int spAddPackage(string packageImage, string packagename, string packageDescription)
        {
            var packageImageParameter = packageImage != null ?
                new ObjectParameter("PackageImage", packageImage) :
                new ObjectParameter("PackageImage", typeof(string));
    
            var packagenameParameter = packagename != null ?
                new ObjectParameter("Packagename", packagename) :
                new ObjectParameter("Packagename", typeof(string));
    
            var packageDescriptionParameter = packageDescription != null ?
                new ObjectParameter("PackageDescription", packageDescription) :
                new ObjectParameter("PackageDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddPackage", packageImageParameter, packagenameParameter, packageDescriptionParameter);
        }
    }
}
